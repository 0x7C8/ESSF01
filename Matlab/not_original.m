%Analog elektronik - Matlab hj√§lp 
%Matlab exemplel f√∂r att kolla fasmarginal och slutna f√∂rst√§rkningen, samt
%ber√§kna slingpoler och titta p√• stegsvar mm.
%2-stegs f√∂rst√§rkare (ASGE-GE), f√∂re och efter kompensering

clear all; close all;

%% Definiera Data
VT = 25e-3;   % (V)
Bf1 = 250; % Kolla datablad!
Bf2 = Bf1;
C1 = 100e-9; % (F) - Ers√§tter Cpi1_prim
C2 = 2.2e-6; % (F) - Ers√§tter Cpi2

%% F√∂rst√§rkare 
Rs = 50; % (Ohm) %K√§llan √§r inte ideal
R1 = 100; % (Ohm)
RL = 1000;    % (Ohm)
AtINF = -1/R1;  %Asymptotiska f√∂rst√§rkningen

Ic1ab = (10e-3)/2; %Str√∂mmen i ing√•ngssteget
rpi_p = 2*Bf1*VT/Ic1ab; %rpi_p = 2*rpi
Ic2 = 5e-3; % (A)
rpi2 = Bf2*VT/Ic2;
gm2 = Ic2/VT;

%Rbias = 150; %D√•lig biasering med Rbias! (anv√§nd str√∂mspegel) Rbias = 0.7/Ic1ab ,Biaserar upp GE steget.
%rpi2_new = rpi2*Rbias/(rpi2+Rbias)

%DC slingf√∂rst√§rkning och slingpoler:
ABnoll = (-100);
P1 = -(R1+Rs+rpi_p)/((R1+Rs)*C1*rpi_p)
P2 = -1/(rpi2*C2)

%% √Ñr alla poler dominanta?:
w0_2p = sqrt((abs( (1-ABnoll)*P1*P2 )))
SummaP = P1+P2 %Summa slingpoler
SummaP_p = -sqrt(2)*w0_2p %Summa av systempoler (2st)
%Kolla att summaP > SummaP_p --> bara dominanta poler som kan flyttas till
%√∂nskad position
n = -(w0_2p^2)/(sqrt(2)*w0_2p+P1+P2)


%%%%%%FREKVENSKOMPENSERING
%% Unders√∂k fasmarginal f√∂re och efter kompensering:
s = zpk('s') %Definiera s

%F√∂re kompensering: (Betraktas som ett system med tv√• poler)
ABs = ABnoll/((1-s/P1)*(1-s/P2))
[gain_margin, phase_margin] = margin((-1)*ABs) %Ignorera gain margin (mer om den i reglerteknik).
%Matlab verkar inte gilla negativa system, sÂ -1 behˆvs fˆr att fÂ r‰tt fasmarginal.

At = AtINF*(-1)*ABs/(1-ABs); %Slutna f√∂rst√§rkningen, icke kompenserad.

%% %%%%FIGURER
%Fasmarginal kollas "open loop", dvs frekvensen w0, d√§r |AB(w0)| = 1 = 0dB, f√∂re = ABs och efter = ABs_n kompensering
%(Bode-funktionen beh√∂ver ibland ett (-1).* pga 'Phase unwrap')
figure(1)
bode((-1).*ABs,'b'); 
title('Slingfˆrst‰rkning');
grid on

figure(2)
bode(At,'b'); 
title('Den slutna f√∂rst√§rkningen, At');
grid on
    
figure(3)
step(At);
title('Stegsvaren f√∂re och efter kompensering')



%% %%%% HJ√ÑLP F√ñR ATT PLOTTA M√ÑTRESULTAT TILLSAMMANS (SAMMA FIGUR) MED SIMULERAD PRESTANDA (Kompenserat
%%%%%% och okompenserat)
% W_labbet = [frekvensvektor fr√•n labbet].*(2*pi);
% At_labbet_kompenserat_dB = [m√§tresultat]
% At_labbet_kompenserat_fas = [m√§tresultat]
%p√• samma s√§tt l√§gger f√∂r At_okompenserat
W = [1:100:1e6].*(2*pi);
[MAG_At, PHASE_At]  =  bode(At,W);
for k = 1:length(W)
    dB_MAG_At(k) = 20*log10(MAG_At(1,1,k));
    phase_At(k) = PHASE_At(1,1,k);
end
% semilogx(W,dB_MAG_At,'b', W_labbet, At_labbet_kompenserat_dB,'r', W_labbet,At_labbet_okompenserat_dB,'k');
% semilogx(W,phase_At,'b', W_labbet, At_labbet_kompenserat_fas,'r', W_labbet,At_labbet_okompenserat_fas,'k');
% %xlabel och ylabel f√∂r axlarna
figure(4)
semilogx(W,dB_MAG_At,'b');%hold on; ... l√§gg till m√§tresultat
figure(5)
semilogx(W,phase_At,'b');%hold on; ...l√§gg till m√§tresultat
